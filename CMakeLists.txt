cmake_minimum_required(VERSION 3.10.0)
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_CXX_STANDARD_LIBRARIES "-static-libgcc -static-libstdc++ -lwsock32 -lws2_32 ${CMAKE_CSS_STANDARD_LIBRARIES}")
set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Bstatic,--whole-archive -lwinpthread -Wl,--no-whole-archive")

project(YellowViewer VERSION 0.1.0)

add_subdirectory(app)
add_subdirectory(wnd)
add_subdirectory(edit)
add_subdirectory(text_data)
add_subdirectory(parser)
add_subdirectory(reader)
add_subdirectory(directory_watcher)
add_subdirectory(status_bar)
add_subdirectory(ms_edit)
add_subdirectory(sqlite)
add_subdirectory(encoding_string)
add_subdirectory(db)
add_subdirectory(timer_perf)

add_executable(${PROJECT_NAME} main.cpp)

target_compile_definitions(sqlite PUBLIC SQLITE_THREADSAFE=0)

target_include_directories(${PROJECT_NAME} PUBLIC app)
target_include_directories(${PROJECT_NAME} PUBLIC wnd)
target_include_directories(${PROJECT_NAME} PUBLIC edit)
target_include_directories(${PROJECT_NAME} PUBLIC text_data)
target_include_directories(${PROJECT_NAME} PUBLIC parser)
target_include_directories(${PROJECT_NAME} PUBLIC reader)
target_include_directories(${PROJECT_NAME} PUBLIC directory_watcher)
target_include_directories(${PROJECT_NAME} PUBLIC status_bar)
target_include_directories(${PROJECT_NAME} PUBLIC ms_edit)
target_include_directories(${PROJECT_NAME} PUBLIC sqlite)
target_include_directories(${PROJECT_NAME} PUBLIC encoding_string)
target_include_directories(${PROJECT_NAME} PUBLIC db)
target_include_directories(${PROJECT_NAME} PUBLIC timer_perf)

target_link_libraries(${PROJECT_NAME} app)
target_link_libraries(${PROJECT_NAME} wnd)
target_link_libraries(${PROJECT_NAME} edit)
target_link_libraries(${PROJECT_NAME} text_data)
target_link_libraries(${PROJECT_NAME} parser)
target_link_libraries(${PROJECT_NAME} reader)
target_link_libraries(${PROJECT_NAME} directory_watcher)
target_link_libraries(${PROJECT_NAME} status_bar)
target_link_libraries(${PROJECT_NAME} ms_edit)
target_link_libraries(${PROJECT_NAME} sqlite)
target_link_libraries(${PROJECT_NAME} encoding_string)
target_link_libraries(${PROJECT_NAME} db)
target_link_libraries(${PROJECT_NAME} timer_perf)

set(CMAKE_CXX_FLAGS "-municode -mwindows")
